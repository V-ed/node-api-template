name: Renovate

on:
  push:
    branches:
      - 'renovate/**'

env:
  NODE_VERSION: '16'

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'

      - name: Install
        run: npm ci --no-optional

      - name: Lint Prisma
        run: npm run lint:prisma

      - name: Lint
        run: npm run lint:src

      - name: Lint Tests
        run: npm run lint:tests

  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'

      - name: Install
        run: npm ci --no-optional

      - name: Build
        run: npm run build

  test:
    name: 'Test and Coverage'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'

      - name: Install
        run: npm ci --no-optional

      - name: Init
        run: npm run init
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'

      - name: Test and Coverage
        run: npm run test:cov
        env:
          TEST_DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'

  seed:
    name: 'Test Seed'
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: 'npm'

      - name: Install
        run: npm ci --no-optional

      - name: Init
        run: npm run init
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'

      - name: Seed
        run: npx prisma db seed
        env:
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
